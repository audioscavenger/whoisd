# https://github.com/firefart/whoisd

---
services:
  whoisd:
    image: whoisd
    container_name: whoisd
    environment:
      TZ:   ${TZ}
      UID:  1000
      GID:  1000
      PUID: 1000
      PGID: 1000
      # to manually force a rebuild: REBUILD=true ./bin/whoisd
      REBUILD: true
    build:
      context: .
    command: -c postgresql+psycopg://whoisd:whoisd@db:5432/whoisd --debug
    # command: -c postgresql+psycopg://whoisd:whoisd@db:5432/whoisd
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - /docker/whoisd/downloads:/app/downloads
    depends_on:
      - db
      # db:
        # condition: service_healthy
        # restart: true
    restart: no
    security_opt:
      - no-new-privileges:true
    # cpus: 1
    # mem_limit: 1024M
    # mem_reservation: 256M
    # deploy:
      # resources:
        # limits:
          # cpus: ${cpus}
          # memory: ${memory}
        # reservations:
          # cpus: 1
          # memory: 256M
    # blkio_config:
      # device_read_iops:
        # - path: ${device_read_iops_path}
          # rate: ${device_read_iops}
      # device_write_iops:
        # - path: ${device_read_iops_path}
          # rate: ${device_write_iops}
    networks:
      backend:


  db:
    image: postgres:13-alpine
    container_name: whoisd-db
    environment:
      TZ: ${TZ}
      # postgres user id=70 shall be used
      # UID:  1000
      # GID:  1000
      # PUID: 1000
      # PGID: 1000
      POSTGRES_DB: whoisd
      POSTGRES_USER: whoisd
      POSTGRES_PASSWORD: whoisd
    healthcheck:
      # whoisd-db  | 2024-10-06 01:05:55.937 UTC [525] FATAL:  role "root" does not exist
      # whoisd-db  | 2024-10-06 01:06:26.001 UTC [533] FATAL:  role "root" does not exist
      # https://github.com/peter-evans/docker-compose-healthcheck/issues/16
      # docker exec whoisd-db pg_isready -U whoisd -d whoisd
      # test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}" ]          # this bugs out sometimes
      test: ["CMD-SHELL", "pg_isready -U whoisd -d whoisd" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      # - pg_data:/var/lib/postgresql/data
      # - /docker/whoisd_db/data:/var/lib/postgresql/data
      - /docker/whoisd/data:/var/lib/postgresql/data
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    # cpus: 1
    # mem_limit: 4096M
    # mem_reservation: 256M
    # deploy:
      # resources:
        # limits:
          # cpus: ${cpus}
          # memory: ${memory}
        # reservations:
          # cpus: 1
          # memory: 256M
    # blkio_config:
      # device_read_iops:
        # - path: ${device_read_iops_path}
          # rate: ${device_read_iops}
      # device_write_iops:
        # - path: ${device_read_iops_path}
          # rate: ${device_write_iops}
    networks:
      backend:


# volumes:
  # pg_data:
    # driver: local

networks:
  # proxy:
    # external: true
    # name: proxy
  # frontend:
    # external: true
    # name: frontend
# one external network per separate domain in compose swag AND nginx: actual names will be nginx_admin, nginx_it-cooking etc
  # frontend.autodiscover.derewonko:
    # external: true
    # name: frontend.autodiscover.derewonko
  # frontend.admin.derewonko:
    # external: true
    # name: frontend.admin.derewonko
  # frontend.derewonko:
    # external: true
    # name: frontend.derewonko
  # frontend.it-cooking:
    # external: true
    # name: frontend.it-cooking
  # frontend.prestaservicesgroup:
    # external: true
    # name: frontend.prestaservicesgroup
  # frontend.doctusit:
    # external: true
    # name: frontend.doctusit
  # frontend.levelupwd:
    # external: true
    # name: frontend.levelupwd
  # meet.jitsi:
    # external: true
    # name: meet.jitsi
  backend:
    external: true
    name: backend
